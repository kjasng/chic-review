version: "3.8"

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
      args:
        MONGODB_URI: ${MONGODB_URI}
    container_name: chic-review-app
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - NEXTAUTH_URL=https://your-domain.com
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-generate-a-secure-32-char-secret-for-production}
      - REDIS_URL=redis://redis:6379
    # No volumes in production - everything is baked into the image
    depends_on:
      - redis
    networks:
      - chic-review-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: chic-review-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chic-review-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mailhog (Email testing in development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: chic-review-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - chic-review-network

networks:
  chic-review-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local
