version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: chic-review-app
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - MONGODB_URI=postgresql://postgres:postgres@db:5432/chic_review_dev
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-development-secret-key-min-32-chars
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - db
      - redis
    networks:
      - chic-review-network
    command: >
      sh -c "
        if [ -f yarn.lock ]; then
          yarn dev
        elif [ -f package-lock.json ]; then
          npm run dev
        elif [ -f pnpm-lock.yaml ]; then
          pnpm dev
        else
          echo 'No lockfile found' && exit 1
        fi
      "

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: chic-review-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - chic-review-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Mailhog (Email testing in development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: chic-review-mailhog
    restart: unless-stopped
    ports:
      - '1025:1025' # SMTP server
      - '8025:8025' # Web UI
    networks:
      - chic-review-network

networks:
  chic-review-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
